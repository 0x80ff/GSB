<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Contrôleur du module COMPTABLE de l'application
*/
class C_comptable extends CI_Controller {

	/**
	 * Aiguillage des demandes faites au contrôleur
	 * La fonction _remap est une fonctionnalité offerte par CI destinée à remplacer 
	 * le comportement habituel de la fonction index. Grâce à _remap, on dispose
	 * d'une fonction unique capable d'accepter un nombre variable de paramètres.
	 *
	 * @param $action : l'action demandée par le visiteur
	 * @param $params : les éventuels paramètres transmis pour la réalisation de cette action
	*/
	public function _remap($action, $params = array())
	{
		// chargement du modèle d'authentification
		$this->load->model('authentif');
		
		// contrôle de la bonne authentification de l'utilisateur
		if (!$this->authentif->estConnecte()) 
		{
			// l'utilisateur n'est pas authentifié, on envoie la vue de connexion
			$data = array();
			$this->templates->load('t_connexion', 'v_connexion', $data);
		}
		else
		{
			// Aiguillage selon l'action demandée 
			// CI a traité l'URL au préalable de sorte à toujours renvoyer l'action "index"
			// même lorsqu'aucune action n'est exprimée
			if ($action == 'index')				// index demandé : on active la fonction accueil du modèle comptable
			{
				$this->load->model('a_comptable');

				$this->a_comptable->accueil();
			}
			elseif($action == 'gesFiches'){
				$this->load->model('a_comptable');
				$this->a_comptable->voirFiches();
			}
			elseif($action == 'gesPaiement'){
				$this->load->model('a_comptable');
				$this->a_comptable->voirValides();
			}
			elseif ($action == 'valFiche')		// voirFiche demandé : on active la fonction voirFiche du modèle authentif
			{	// TODO : contrôler la validité du second paramètre (mois de la fiche à consulter)
				$idVisiteur = $_POST['idVisiteur'];
				$mois = $_POST['mois'];	

				//----CREEER LE FORMULAIRE DANS COMVOIRFICHESIGN ET LA FONCTION DAFFICHAGE ET DE VALIDATION
				$this->load->model('a_comptable');

				// obtention du mois de la fiche à modifier qui doit avoir été transmis
				// en second paramètre
				//$mois = $params[0];
				//$idVisiteur = $param[1];
				// mémorisation du mode modification en cours 
				// on mémorise le mois de la fiche en cours de modification
				$this->session->set_userdata('mois', $mois);

				$this->a_comptable->valFiche($mois, $idVisiteur);
			}
			elseif ($action == 'afficheFraisVal')		// voirFiche demand� : on active la fonction voirFiche du mod�le authentif
			{	// TODO : contr�ler la validit� du second param�tre (mois de la fiche � consulter)
			$idVisiteur = $_POST['idVisiteur'];
			$mois = $_POST['mois'];
			
			//----CREEER LE FORMULAIRE DANS COMVOIRFICHESIGN ET LA FONCTION DAFFICHAGE ET DE VALIDATION
			$this->load->model('a_comptable');
			
			// obtention du mois de la fiche � modifier qui doit avoir �t� transmis
			// en second param�tre
			//$mois = $params[0];
			//$idVisiteur = $param[1];
			// m�morisation du mode modification en cours
			// on m�morise le mois de la fiche en cours de modification
			$this->session->set_userdata('mois', $mois);
			
			$this->a_comptable->mpVoirFiche($mois, $idVisiteur);
			}
			elseif($action == 'validationFiche'){
				$idVisiteur = $_POST['idVisiteur'];
				$mois = $_POST['mois'];
				$action = $_POST['val'];
				$commentaire = $_POST['commentaire'];
			
				$this->load->model('a_comptable');
				$this->a_comptable->validationFiches($idVisiteur, $mois, $action, $commentaire);
			}
			
			
			
			elseif($action == 'misePaiementFiche'){
				
			$slct = (isset($_POST['slct'])) ? $_POST['slct'] : 0;
				if($slct != 0){
					$tabIdVisiteur = $_POST['idVisiteur'];
					$tabMois = $_POST['mois'];
					$tabId = $_POST['id'];
					$long = count($tabId);
					$longslct = count ($slct);
				}
				if(isset($slct) && isset($tabId) && $slct != 0){ 
				
					for ($i=0; $i<$long; $i++)
					{
						for ($j=0; $j<$longslct; $j++)
						{
						
							if($tabId[$i]==$slct[$j])
							{

								$idVisiteur = $tabIdVisiteur[$i];
								$mois = $tabMois[$i];								
				
								$this->load->model('a_comptable');
								$this->a_comptable->misePFiche($mois, $idVisiteur);
							}
						}
					}
				}
				$this->load->model('a_comptable');
				$this->a_comptable->voirValides();
			}
			elseif ($action == 'afficheFraisMP')		// voirFiche demand� : on active la fonction voirFiche du mod�le authentif
			{	// TODO : contr�ler la validit� du second param�tre (mois de la fiche � consulter)
			$idVisiteur = $_POST['idVisiteur'];
			$mois = $_POST['mois'];
			
			//----CREEER LE FORMULAIRE DANS COMVOIRFICHESIGN ET LA FONCTION DAFFICHAGE ET DE VALIDATION
			$this->load->model('a_comptable');
			
			// obtention du mois de la fiche � modifier qui doit avoir �t� transmis
			// en second param�tre
			//$mois = $params[0];
			//$idVisiteur = $param[1];
			// m�morisation du mode modification en cours
			// on m�morise le mois de la fiche en cours de modification
			$this->session->set_userdata('mois', $mois);
			
			$this->a_comptable->rbVoirFiche($mois, $idVisiteur);
			}
			
			
			
			
			
			elseif($action == 'rembourseFiche'){
				
				
			$slct = (isset($_POST['slct'])) ? $_POST['slct'] : 0;
				if($slct != 0){
					$tabIdVisiteur = $_POST['idVisiteur'];
					$tabMois = $_POST['mois'];
					$tabId = $_POST['id'];
					$long = count($tabId);
					$longslct = count ($slct);
				}
				if(isset($slct) && isset($tabId) && $slct != 0){
				
					for ($i=0; $i<$long; $i++)
					{
					for ($j=0; $j<$longslct; $j++)
					{
				
					if($tabId[$i]==$slct[$j])
					{
				
					$idVisiteur = $tabIdVisiteur[$i];
						$mois = $tabMois[$i];
				
						$this->load->model('a_comptable');
						$this->a_comptable->miseRBFiche($mois, $idVisiteur);
					}
					}
					}
					}
					$this->load->model('a_comptable');
					$this->a_comptable->voirValides();
					
					
				/*$idVisiteur = $_POST['idVisiteur'];
				$mois = $_POST['mois'];
			
				$this->load->model('a_comptable');
				$this->a_comptable->miseRBFiche($mois, $idVisiteur);*/
			}
			
			
			
			
			elseif ($action == 'deconnecter')	// deconnecter demandé : on active la fonction deconnecter du modèle authentif
			{
				$this->load->model('authentif');
				$this->authentif->deconnecter();
			}
			else								// dans tous les autres cas, on envoie la vue par défaut pour l'erreur 404
			{
				show_404();
			}
		}
	}
}
